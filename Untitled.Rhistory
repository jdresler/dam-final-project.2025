top_n <- 8
bigrams_top <- bigrams_tema %>%
count(year, bigram, sort = TRUE) %>%
group_by(year) %>%
slice_max(n, n = top_n, with_ties = FALSE) %>%
ungroup()
bigrams_tema %>%
filter(year == 1980) %>%
count(bigram, sort = TRUE) %>%
slice_head(n = 10)
plot_bigrams <- bigrams_top %>%
mutate(bigram = reorder_within(bigram, n, year)) %>%
ggplot(aes(x = bigram, y = n, fill = factor(year))) +
geom_col(show.legend = FALSE) +
facet_wrap(~year, scales = "free_y") +
coord_flip() +
scale_x_reordered() +
labs(
title = "Tematiske bigrams: Konservative 1980 og 1981",
x = "Bigram", y = "Forekomster"
) +
theme_minimal(base_size = 13)
# Gem som PDF
ggsave(
filename = "konservative_tema_bigrams_TOP8_BALANCE.pdf",
plot = plot_bigrams,
path = "/Users/user/Desktop/Aflevering",  # ← Tilpas stien efter behov
width = 10, height = 6
)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1980 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1980.txt", 1980)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1981.txt", 1981)
bigrams_all <- bind_rows(df_1980, df_1981)
# Ordlister for hvert tema
tema_ord <- list(
Økonomi = c("økonomi", "økonomisk", "økonomiske"),
Arbejdsmarked = c("arbejde", "arbejdsmarked", "arbejdsløshed", "job", "beskæftigelse")
)
# Funktion der tildeler tema
find_tema <- function(bigram, tema_ord) {
for (tema in names(tema_ord)) {
if (any(str_detect(bigram, paste(tema_ord[[tema]], collapse = "|")))) {
return(tema)
}
}
return(NA)
}
# Tilføj tema
bigrams_tema <- bigrams_all %>%
mutate(tema = map_chr(bigram, ~ find_tema(.x, tema_ord))) %>%
filter(!is.na(tema))
# Tæl antal bigrams per tema og år
tema_tæl <- bigrams_tema %>%
count(tema, year)
# Plot
ggplot(tema_tæl, aes(x = n, y = fct_rev(paste(tema, "(", year, ")")), fill = factor(year))) +
geom_col(show.legend = FALSE) +
labs(
title = "Tematiske bigrams: Konservative 1980 og 1981",
x = "Forekomster", y = "Tema (år)"
) +
theme_minimal(base_size = 13)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1980 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1980.txt", 1980)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1981.txt", 1981)
bigrams_all <- bind_rows(df_1980, df_1981)
# Ordlister for hvert tema
tema_ord <- list(
Økonomi = c("økonomi", "økonomisk", "økonomiske", "vækst", "finans", "budget"),
Arbejdsmarked = c("arbejde", "arbejdsmarked", "arbejdsplads", "arbejdspladser", "job", "beskæftigelse", "arbejdsløshed", "dagpenge"),
Miljø = c("miljø", "energi", "klima", "bæredygtig", "ressourcer", "forurening", "natur"),
Velfærd = c("velfærd", "sundhed", "sygehus", "hospital", "pleje", "børn", "ældre", "familie", "omsorg"),
Uddannelse = c("uddannelse", "skole", "universitet", "studie", "læring", "elever", "undervisning"),
Skat = c("skat", "skatter", "beskatning", "skattepolitik", "skattelettelser"),
Forsvar = c("forsvar", "militær", "hæren", "soldater", "nato", "sikkerhedspolitik"),
Europa = c("europa", "eu", "fællesskab", "europæisk", "europæiske"),
Retspolitik = c("ret", "domstol", "kriminalitet", "politi", "strafferet", "retsvæsen", "retfærdighed"),
Indvandring = c("indvandring", "indvandrere", "flygtning", "asyl", "migrant", "integration")
)
# Funktion der tildeler tema
find_tema <- function(bigram, tema_ord) {
for (tema in names(tema_ord)) {
if (any(str_detect(bigram, paste(tema_ord[[tema]], collapse = "|")))) {
return(tema)
}
}
return(NA)
}
# Tilføj tema
bigrams_tema <- bigrams_all %>%
mutate(tema = map_chr(bigram, ~ find_tema(.x, tema_ord))) %>%
filter(!is.na(tema))
# Tæl antal bigrams per tema og år
tema_tæl <- bigrams_tema %>%
count(tema, year)
# Plot
ggplot(tema_tæl, aes(x = n, y = fct_rev(paste(tema, "(", year, ")")), fill = factor(year))) +
geom_col(show.legend = FALSE) +
labs(
title = "Tematiske bigrams: Konservative 1980 og 1981",
x = "Forekomster", y = "Tema (år)"
) +
theme_minimal(base_size = 13)
ggsave("konservative_temaoversigt_1980_1981.pdf", width = 8, height = 6)
file.choose()
file.choose()
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1980 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1979.txt", 1979)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1981.txt", 1981)
bigrams_all <- bind_rows(df_1979, df_1981)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1979 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1979.txt", 1979)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1981.txt", 1981)
bigrams_all <- bind_rows(df_1979, df_1981)
# Ordlister for hvert tema
tema_ord <- list(
Økonomi = c("økonomi", "økonomisk", "økonomiske", "vækst", "finans", "budget"),
Arbejdsmarked = c("arbejde", "arbejdsmarked", "arbejdsplads", "arbejdspladser", "job", "beskæftigelse", "arbejdsløshed", "dagpenge"),
Miljø = c("miljø", "energi", "klima", "bæredygtig", "ressourcer", "forurening", "natur"),
Velfærd = c("velfærd", "sundhed", "sygehus", "hospital", "pleje", "børn", "ældre", "familie", "omsorg"),
Uddannelse = c("uddannelse", "skole", "universitet", "studie", "læring", "elever", "undervisning"),
Skat = c("skat", "skatter", "beskatning", "skattepolitik", "skattelettelser"),
Forsvar = c("forsvar", "militær", "hæren", "soldater", "nato", "sikkerhedspolitik"),
Europa = c("europa", "eu", "fællesskab", "europæisk", "europæiske"),
Retspolitik = c("ret", "domstol", "kriminalitet", "politi", "strafferet", "retsvæsen", "retfærdighed"),
Indvandring = c("indvandring", "indvandrere", "flygtning", "asyl", "migrant", "integration")
)
# Funktion der tildeler tema
find_tema <- function(bigram, tema_ord) {
for (tema in names(tema_ord)) {
if (any(str_detect(bigram, paste(tema_ord[[tema]], collapse = "|")))) {
return(tema)
}
}
return(NA)
}
# Tilføj tema
bigrams_tema <- bigrams_all %>%
mutate(tema = map_chr(bigram, ~ find_tema(.x, tema_ord))) %>%
filter(!is.na(tema))
# Tæl antal bigrams per tema og år
tema_tæl <- bigrams_tema %>%
count(tema, year)
# Plot
ggplot(tema_tæl, aes(x = n, y = fct_rev(paste(tema, "(", year, ")")), fill = factor(year))) +
geom_col(show.legend = FALSE) +
labs(
title = "Tematiske bigrams: Socialdemokraterne 1979 og 1981",
x = "Forekomster", y = "Tema (år)"
) +
theme_minimal(base_size = 13)
ggsave("konservative_temaoversigt_1980_1981.pdf", width = 8, height = 6)
ggsave("konservative_temaoversigt_1980_1981.pdf", width = 8, height = 6)
ggsave("socialdemokratiet_temaoversigt_1979_1981.pdf", width = 8, height = 6)
file.choose()
file.choose()
knitr::opts_chunk$set(echo = TRUE)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1979 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1979.txt", 1979)
library(tidyverse)
library(tidytext)
library(readr)
library(stringr)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1979 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1979.txt", 1979)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/socialdemokratiet_1981.txt", 1981)
bigrams_all <- bind_rows(df_1979, df_1981)
# Ordlister for hvert tema
tema_ord <- list(
Økonomi = c("økonomi", "økonomisk", "økonomiske", "vækst", "finans", "budget"),
Arbejdsmarked = c("arbejde", "arbejdsmarked", "arbejdsplads", "arbejdspladser", "job", "beskæftigelse", "arbejdsløshed", "dagpenge"),
Miljø = c("miljø", "energi", "klima", "bæredygtig", "ressourcer", "forurening", "natur"),
Velfærd = c("velfærd", "sundhed", "sygehus", "hospital", "pleje", "børn", "ældre", "familie", "omsorg"),
Uddannelse = c("uddannelse", "skole", "universitet", "studie", "læring", "elever", "undervisning"),
Skat = c("skat", "skatter", "beskatning", "skattepolitik", "skattelettelser"),
Forsvar = c("forsvar", "militær", "hæren", "soldater", "nato", "sikkerhedspolitik"),
Europa = c("europa", "eu", "fællesskab", "europæisk", "europæiske"),
Retspolitik = c("ret", "domstol", "kriminalitet", "politi", "strafferet", "retsvæsen", "retfærdighed"),
Indvandring = c("indvandring", "indvandrere", "flygtning", "asyl", "migrant", "integration")
)
# Funktion der tildeler tema
find_tema <- function(bigram, tema_ord) {
for (tema in names(tema_ord)) {
if (any(str_detect(bigram, paste(tema_ord[[tema]], collapse = "|")))) {
return(tema)
}
}
return(NA)
}
# Tilføj tema
bigrams_tema <- bigrams_all %>%
mutate(tema = map_chr(bigram, ~ find_tema(.x, tema_ord))) %>%
filter(!is.na(tema))
# Tæl antal bigrams per tema og år
tema_tæl <- bigrams_tema %>%
count(tema, year)
# Plot
ggplot(tema_tæl, aes(x = n, y = fct_rev(paste(tema, "(", year, ")")), fill = factor(year))) +
geom_col(show.legend = FALSE) +
labs(
title = "Tematiske bigrams: Socialdemokratiet 1979 og 1981",
x = "Forekomster", y = "Tema (år)"
) +
theme_minimal(base_size = 13)
ggsave("socialdemokratiet_temaoversigt_1979_1981.pdf", width = 8, height = 6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidytext)
library(readr)
library(stringr)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1980 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1980.txt", 1980)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1981.txt", 1981)
bigrams_all <- bind_rows(df_1980, df_1981)
# Ordlister for hvert tema
tema_ord <- list(
Økonomi = c("økonomi", "økonomisk", "økonomiske", "vækst", "finans", "budget"),
Arbejdsmarked = c("arbejde", "arbejdsmarked", "arbejdsplads", "arbejdspladser", "job", "beskæftigelse", "arbejdsløshed", "dagpenge"),
Miljø = c("miljø", "energi", "klima", "bæredygtig", "ressourcer", "forurening", "natur"),
Velfærd = c("velfærd", "sundhed", "sygehus", "hospital", "pleje", "børn", "ældre", "familie", "omsorg"),
Uddannelse = c("uddannelse", "skole", "universitet", "studie", "læring", "elever", "undervisning"),
Skat = c("skat", "skatter", "beskatning", "skattepolitik", "skattelettelser"),
Forsvar = c("forsvar", "militær", "hæren", "soldater", "nato", "sikkerhedspolitik"),
Europa = c("europa", "eu", "fællesskab", "europæisk", "europæiske"),
Retspolitik = c("ret", "domstol", "kriminalitet", "politi", "strafferet", "retsvæsen", "retfærdighed"),
Indvandring = c("indvandring", "indvandrere", "flygtning", "asyl", "migrant", "integration")
)
# Funktion der tildeler tema
find_tema <- function(bigram, tema_ord) {
for (tema in names(tema_ord)) {
if (any(str_detect(bigram, paste(tema_ord[[tema]], collapse = "|")))) {
return(tema)
}
}
return(NA)
}
# Tilføj tema
bigrams_tema <- bigrams_all %>%
mutate(tema = map_chr(bigram, ~ find_tema(.x, tema_ord))) %>%
filter(!is.na(tema))
# Tæl antal bigrams per tema og år
tema_tæl <- bigrams_tema %>%
count(tema, year)
# Plot
ggplot(tema_tæl, aes(x = n, y = fct_rev(paste(tema, "(", year, ")")), fill = factor(year))) +
geom_col(show.legend = FALSE) +
labs(
title = "Tematiske bigrams: Konservative 1980 og 1981",
x = "Forekomster", y = "Tema (år)"
) +
theme_minimal(base_size = 13)
ggsave("konservative_temaoversigt_1980_1981.pdf", width = 8, height = 6)
knitr::opts_chunk$set(echo = TRUE)
longest_ruling_kings <- kingsduration %>%
arrange(desc(duration)) %>%
slice(1:3) #select top 3
knitr::opts_chunk$set(echo = TRUE)
kingsduration %>%
na.omit(kingsduration$midyear) %>%
ggplot(aes(x=midyear, y=duration))+
geom_point()+
geom_smooth()
library(tidyverse)
read_csv("data/kings.csv")
read.csv("data/kongerækken-csv-2.csv")
# FILL IN THE CODE BELOW and review the outputs
kings1 <- read.csv("data/kongerækken-csv-2.csv")
head(kings1)
glimpse(kings1)
class(kings1)
kings2 <- read_csv("data/Kongerækken-csv-2.csv")
head(kings2)
glimpse(kings2)
class(kings2)
kings3 <- read.csv2("data/Kongerækken-csv-2.csv")
head(kings3)
glimpse(kings3)
class(kings3)
kings4 <- read_csv2( "data/Kongerækken-csv-2.csv")
head(kings4)
glimpse(kings4)
class(kings4)
# COMPLETE THE BLANKS BELOW WITH YOUR CODE, then turn the 'eval' flag in this chunk to TRUE.
kings <- read.csv("data/kongerækken-csv-2.csv")
class(kings)
ncol(kings)
glimpse(kings)
kings %>%
mutate(duration=kings$Regering.slut-kings$Regerings.start)
kings %>%
mutate(duration = Regering.slut - Regerings.start)
knitr::opts_chunk$set(echo = TRUE,
message=FALSE)
library(tidyverse)
western_Europe <- read_csv("data/homicide-rates-across-western-europe.csv")
Western_Europe <- read_csv("data/homicide-rates-across-western-europe.csv")
Western_Europe <- read_csv("data/homicide-rates-across-western-europe.csv")
read.csv("data/kongerækken-csv-2.csv")
read.csv("data/kongerækken-csv-2.csv")
files.choose()
file.choose()
read.csv("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
kongerækken <- read_csv2("data/kongerækken-csv-2.csv")
kongerækken <- read_csv2("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
file.choose()
read_csv("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kings.csv")
kings <- read_csv("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kings.csv")
# FILL IN THE CODE BELOW and review the outputs
kings1 <- read.csv("data/kongerækken-csv-2.csv")
# FILL IN THE CODE BELOW and review the outputs
kings1 <- read.csv("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings1)
glimpse(kings1)
class(kings1)
kings2 <- read_csv("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings2)
glimpse(kings2)
class(kings2)
kings3 <- read.csv2("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings3)
glimpse(kings3)
class(kings3)
kings4 <- read_csv2( "/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings4)
glimpse(kings4)
class(kings4)
# COMPLETE THE BLANKS BELOW WITH YOUR CODE, then turn the 'eval' flag in this chunk to TRUE.
kings <- read.csv("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
class(kings)
ncol(kings)
glimpse(kings)
# FILL IN THE CODE BELOW and review the outputs
kings1 <- read.csv2("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings1)
glimpse(kings1)
class(kings1)
kings2 <- read_csv2("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings2)
glimpse(kings2)
class(kings2)
kings3 <- read.csv2("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings3)
glimpse(kings3)
class(kings3)
kings4 <- read_csv2( "/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
head(kings4)
glimpse(kings4)
class(kings4)
# COMPLETE THE BLANKS BELOW WITH YOUR CODE, then turn the 'eval' flag in this chunk to TRUE.
kings <- read.csv2("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/DanishMonarchs-main/data/kongerækken-csv-2.csv")
class(kings)
ncol(kings)
glimpse(kings)
kings %>%
mutate(duration=kings$Regering.slut-kings$Regerings.start)
kingsduration <- kings%>%
mutate(duration=kings$Regering.slut-kings$Regerings.start) %>%
mutate(midyear=Regerings.start+duration/2)
avg_duration<-mean(kingsduration$duration, na.rm = TRUE)
avg_duration
long_reign_king <- kingsduration %>%
filter(duration>avg_duration)
long_reign_king %>%
count()
print(long_reign_king) %>%
arrange(desc(duration))
longest_ruling_kings <- kingsduration %>%
arrange(desc(duration)) %>%
slice(1:3) #select top 3
longest_ruling_kings %>%
mutate(days=duration*365)
print(longest_ruling_kings)
kingsduration %>%
na.omit(kingsduration$midyear) %>%
ggplot(aes(x=midyear, y=duration))+
geom_point()+
geom_smooth()
file.choose()
library(tidyverse)
library(tidytext)
library(readr)
library(stringr)
load_and_tokenize <- function(filepath, year) {
text <- read_file(filepath, locale = locale(encoding = "UTF-8"))
tibble(text = text) %>%
unnest_tokens(bigram, text, token = "ngrams", n = 2) %>%
separate(bigram, into = c("word1", "word2"), sep = " ") %>%
mutate(across(c(word1, word2), str_to_lower)) %>%
filter(str_detect(word1, "^[a-zæøå]+$"),
str_detect(word2, "^[a-zæøå]+$")) %>%
unite("bigram", word1, word2, sep = " ") %>%
mutate(year = year)
}
# Tilpas stier
df_1980 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1980.txt", 1980)
df_1981 <- load_and_tokenize("/Users/user/Desktop/Historie AU/2. Semester/Digitale_arkiver_metoder/Rstudio/data_DAMprojekt/tidy_data/konservative_1981.txt", 1981)
bigrams_all <- bind_rows(df_1980, df_1981)
# Ordlister for hvert tema
tema_ord <- list(
Økonomi = c("økonomi", "økonomisk", "økonomiske", "vækst", "finans", "budget"),
Arbejdsmarked = c("arbejde", "arbejdsmarked", "arbejdsplads", "arbejdspladser", "job", "beskæftigelse", "arbejdsløshed", "dagpenge"),
Miljø = c("miljø", "energi", "klima", "bæredygtig", "ressourcer", "forurening", "natur"),
Velfærd = c("velfærd", "sundhed", "sygehus", "hospital", "pleje", "børn", "ældre", "familie", "omsorg"),
Uddannelse = c("uddannelse", "skole", "universitet", "studie", "læring", "elever", "undervisning"),
Skat = c("skat", "skatter", "beskatning", "skattepolitik", "skattelettelser"),
Forsvar = c("forsvar", "militær", "hæren", "soldater", "nato", "sikkerhedspolitik"),
Europa = c("europa", "eu", "fællesskab", "europæisk", "europæiske"),
Retspolitik = c("ret", "domstol", "kriminalitet", "politi", "strafferet", "retsvæsen", "retfærdighed"),
Indvandring = c("indvandring", "indvandrere", "flygtning", "asyl", "migrant", "integration")
)
# Funktion der tildeler tema
find_tema <- function(bigram, tema_ord) {
for (tema in names(tema_ord)) {
if (any(str_detect(bigram, paste(tema_ord[[tema]], collapse = "|")))) {
return(tema)
}
}
return(NA)
}
# Tilføj tema
bigrams_tema <- bigrams_all %>%
mutate(tema = map_chr(bigram, ~ find_tema(.x, tema_ord))) %>%
filter(!is.na(tema))
# Tæl antal bigrams per tema og år
tema_tæl <- bigrams_tema %>%
count(tema, year)
# Plot
ggplot(tema_tæl, aes(x = n, y = fct_rev(paste(tema, "(", year, ")")), fill = factor(year))) +
geom_col(show.legend = FALSE) +
labs(
title = "Tematiske bigrams: Konservative 1980 og 1981",
x = "Forekomster", y = "Tema (år)"
) +
theme_minimal(base_size = 13)
savehistory("~/Eksamen DAM/Untitled.Rhistory")
